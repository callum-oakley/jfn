on:
  push:
    branches:
      - main
defaults:
  run:
    shell: bash
jobs:
  cargo-test:
    strategy:
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test
  get-version:
    needs: cargo-test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      published: ${{ steps.vars.outputs.published }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install --path .
      - id: vars
        run: |
          version="$(cat Cargo.toml | jfn -t '$.package.version')"
          published="$(
            curl -s https://crates.io/api/v1/crates/jfn |
              version="${version}" jfn -j '$.versions?.map(a => a.num).includes($version)'
          )"
          echo version="${version}" | tee -a "${GITHUB_OUTPUT}"
          echo published="${published}" | tee -a "${GITHUB_OUTPUT}"
  release-create:
    needs: get-version
    if: ${{ needs.get-version.outputs.published != 'true' }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: gh release create v${{ needs.get-version.outputs.version }} --generate-notes
  release-upload:
    needs:
      - get-version
      - release-create
    strategy:
      matrix:
        include:
          - os: linux
            runs-on: ubuntu-latest
            bin: target/release/jfn
          - os: macos
            runs-on: macos-latest
            bin: target/release/jfn
          - os: windows
            runs-on: windows-latest
            bin: target/release/jfn.exe
    runs-on: ${{ matrix.runs-on }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --release
      - run: |
          archive='jfn-${{ needs.get-version.outputs.version }}-${{ matrix.os }}'
          mkdir "${archive}"
          cp ${{ matrix.bin }} "${archive}"
          tar czf "${archive}.tar.gz" "${archive}"
          gh release upload v${{ needs.get-version.outputs.version }} "${archive}.tar.gz"
  homebrew-publish:
    needs:
      - get-version
      - release-upload
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.HOMEBREW_PUBLISH_TOKEN }}
    steps:
      - run: |
          gh api repos/callum-oakley/homebrew-tap/dispatches \
            -f 'event_type=publish' \
            -f 'client_payload[version]=${{ needs.get-version.outputs.version }}'
  cargo-publish:
    needs: get-version
    if: ${{ needs.get-version.outputs.published != 'true' }}
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish
